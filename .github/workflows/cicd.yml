name: Deploy to Amazon EC2

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  PROJECT_NAME: study
  AWS_REGION: ap-northeast-2
  AWS_S3_BUCKET: study-deploy-prac-bucket
  AWS_CODE_DEPLOY_APPLICATION: study-codedeploy-app
  AWS_CODE_DEPLOY_GROUP: study-codedeploy-app-group

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    # (1)기본 체크아웃
    - name: Checkout
      uses: actions/checkout@v4
    
    # (2) JDK 17 Set up
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    # (3) 실행권한 설정
    - name: Grant execute permission for mvnw
      run: chmod +x mvnw
   
    # (4) Maven Build (Test 제외)
    - name: Build with Maven
      # uses: gradle/actions/setup-gradle@dbbdc275be76ac10734476cc723d82dfe7ec6eda # v3.4.2  
      run: ./mvnw -B package --file pom.xml
    
    # (5) AWS 인증 (깃헙에서 보안정보 등록 - IAM 사용자등록 Access Key, Secret Key 활용)        
    - name: AWS credential 설정
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ env.AWS_REGION }}
        aws-access-key-id: ${{ secrets.CICD_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.CICD_SECRET_KEY }}
   
    # (6) 깃헙액션에서 빌드 결과물을 S3 버킷에 업로드    
    - name: S3에 업로드
      run: aws deploy push --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} --ignore-hidden-files --s3-location s3://$AWS_S3_BUCKET/cicdtest/$GITHUB_SHA.zip --source .
    
    # (7) S3 버킷에 있는 파일을 대상으로 CodeDeploy 실행
    - name: EC2에 배포
      run: aws deploy create-deployment --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name ${{ env.AWS_CODE_DEPLOY_GROUP }} --s3-location bucket=$AWS_S3_BUCKET,key=cicdtest/$GITHUB_SHA.zip,bundleType=zip
<<<<<<< HEAD
      
=======
      
>>>>>>> 5964fccbe86549c4c406f886a89ca4e177cfeb44
